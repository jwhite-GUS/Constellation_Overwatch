# AI Configuration for Constellation Overwatch SDK
# This configuration file defines the AI models and their parameters

ai_config:
  # Global AI settings
  learning_enabled: true
  inference_device: "auto"  # auto, cpu, cuda, tensorrt
  model_cache_size: 1024  # MB
  
  # Computer Vision Models
  computer_vision:
    object_detection:
      model_id: "yolo_detector"
      model_path: "models/yolo_v5.onnx"
      model_type: "onnx"
      confidence_threshold: 0.5
      nms_threshold: 0.4
      class_names:
        - "person"
        - "car"
        - "truck"
        - "motorcycle"
        - "bicycle"
        - "bus"
        - "train"
        - "building"
        - "tree"
        - "road"
        - "aircraft"
        - "boat"
        - "traffic_light"
        - "stop_sign"
        - "fire_hydrant"
      
    image_classification:
      model_id: "scene_classifier"
      model_path: "models/resnet50_scene.onnx"
      model_type: "onnx"
      confidence_threshold: 0.7
      class_names:
        - "urban"
        - "rural"
        - "forest"
        - "water"
        - "mountain"
        - "desert"
        - "industrial"
        - "residential"
    
    semantic_segmentation:
      model_id: "semantic_segmenter"
      model_path: "models/deeplabv3_cityscapes.onnx"
      model_type: "onnx"
      confidence_threshold: 0.6
      num_classes: 19
  
  # Decision Making Models
  decision_making:
    mission_planner:
      model_id: "mission_planner"
      model_path: "models/decision_rules.json"
      model_type: "rule_based"
      risk_threshold: 0.3
      safety_priority: 0.5
      efficiency_priority: 0.3
      mission_priority: 0.2
      
      # Decision rules
      rules:
        high_person_density:
          condition: "person_count > 3"
          action: "maintain_safe_distance"
          priority: "medium"
          
        low_battery:
          condition: "battery_level < 20"
          action: "return_to_base"
          priority: "high"
          
        obstacle_detected:
          condition: "obstacle_distance < 10"
          action: "avoid_obstacle"
          priority: "high"
          
        bad_weather:
          condition: "weather_risk > 0.7"
          action: "return_to_base"
          priority: "high"
          
        mission_complete:
          condition: "mission_progress >= 100"
          action: "return_to_base"
          priority: "low"
  
  # Natural Language Processing
  natural_language:
    command_interpreter:
      model_id: "nlp_interpreter"
      model_path: "models/nlp_model.bin"
      model_type: "transformer"
      confidence_threshold: 0.6
      
      # Command patterns
      command_patterns:
        takeoff:
          patterns: ["take off", "launch", "ascend", "go up", "lift off"]
          parameters: ["altitude", "speed"]
          
        land:
          patterns: ["land", "descend", "go down", "touch down", "come down"]
          parameters: ["location", "speed"]
          
        goto:
          patterns: ["go to", "fly to", "navigate to", "move to", "head to"]
          parameters: ["location", "coordinates", "altitude"]
          
        search:
          patterns: ["search", "look for", "find", "scan", "locate"]
          parameters: ["target", "area", "radius"]
          
        return:
          patterns: ["return", "come back", "go home", "return to base"]
          parameters: ["route", "speed"]
          
        follow:
          patterns: ["follow", "track", "pursue", "tail", "shadow"]
          parameters: ["target", "distance", "speed"]
          
        patrol:
          patterns: ["patrol", "circle", "monitor", "watch", "guard"]
          parameters: ["area", "pattern", "duration"]
          
        stop:
          patterns: ["stop", "halt", "freeze", "hold position"]
          parameters: ["duration"]
  
  # Reinforcement Learning (Future)
  reinforcement_learning:
    enabled: false
    models: []
  
  # Training Configuration
  training:
    enabled: false
    data_collection: true
    model_updates: false
    learning_rate: 0.001
    batch_size: 32
    
  # Performance Monitoring
  monitoring:
    metrics_collection: true
    performance_logging: true
    model_drift_detection: true
    alert_thresholds:
      inference_time: 0.1  # seconds
      memory_usage: 512  # MB
      accuracy_drop: 0.05  # 5%
