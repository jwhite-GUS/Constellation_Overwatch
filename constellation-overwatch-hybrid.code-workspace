{
    "folders": [
        {
            "path": "."
        }
    ],
    "settings": {
        // Python Development Settings
        "python.defaultInterpreterPath": "/usr/bin/python3",
        "python.formatting.provider": "black",
        "python.linting.enabled": true,
        "python.linting.flake8Enabled": true,
        "python.linting.pylintEnabled": false,
        "python.analysis.typeCheckingMode": "basic",
        "python.analysis.autoImportCompletions": true,
        
        // Jupyter Notebook Settings
        "jupyter.askForKernelRestart": false,
        "jupyter.interactiveWindow.textEditor.executeSelection": true,
        "jupyter.sendSelectionToInteractiveWindow": true,
        
        // File Associations (ROS + AI/ML file types)
        "files.associations": {
            "*.launch": "xml",
            "*.urdf": "xml",
            "*.xacro": "xml",
            "*.sdf": "xml",
            "*.world": "xml",
            "*.yaml": "yaml",
            "*.yml": "yaml",
            "*.json": "jsonc",
            "*.config": "yaml"
        },
        
        // File Exclusions (build artifacts, logs, caches)
        "files.exclude": {
            "**/build": true,
            "**/install": true,
            "**/log": true,
            "**/.git": true,
            "**/.DS_Store": true,
            "**/Thumbs.db": true,
            "**/__pycache__": true,
            "**/.pytest_cache": true,
            "**/.mypy_cache": true,
            "**/node_modules": true,
            "**/.venv": true,
            "**/venv": true,
            "**/*.pyc": true,
            "**/.coverage": true,
            "**/htmlcov": true
        },
        
        // Search Exclusions
        "search.exclude": {
            "**/build": true,
            "**/install": true,
            "**/log": true,
            "**/__pycache__": true,
            "**/.pytest_cache": true,
            "**/.mypy_cache": true,
            "**/node_modules": true,
            "**/.venv": true,
            "**/venv": true
        },
        
        // C++ Development Settings
        "C_Cpp.default.intelliSenseMode": "gcc-x64",
        "C_Cpp.default.compilerPath": "/usr/bin/gcc",
        "C_Cpp.default.cStandard": "c11",
        "C_Cpp.default.cppStandard": "c++17",
        "C_Cpp.default.configurationProvider": "ms-vscode.cmake-tools",
        
        // ROS Settings
        "ros.distro": "humble",
        "ros.rosSetupScript": "/opt/ros/humble/setup.bash",
        
        // Docker Settings
        "docker.defaultRegistryPath": "",
        "docker.showStartPage": false,
        
        // CMake Settings
        "cmake.buildDirectory": "${workspaceFolder}/build",
        "cmake.sourceDirectory": "${workspaceFolder}",
        
        // Terminal Settings for Cross-Platform Development
        "terminal.integrated.env.linux": {
            "ROS_DOMAIN_ID": "42",
            "PYTHONPATH": "${workspaceFolder}/sdk:${workspaceFolder}/src:${workspaceFolder}",
            "CONSTELLATION_OVERWATCH_ROOT": "${workspaceFolder}"
        },
        "terminal.integrated.env.windows": {
            "PYTHONPATH": "${workspaceFolder}\\sdk;${workspaceFolder}\\src;${workspaceFolder}",
            "CONSTELLATION_OVERWATCH_ROOT": "${workspaceFolder}"
        },
        
        // Editor Settings
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit",
            "source.fixAll.flake8": "explicit"
        },
        "editor.rulers": [88, 120],
        "editor.tabSize": 4,
        "editor.insertSpaces": true,
        
        // Git Settings
        "git.autofetch": true,
        "git.enableSmartCommit": true,
        
        // YAML Settings
        "yaml.schemas": {
            "https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json": [
                "docker-compose*.yml",
                "docker-compose*.yaml"
            ]
        },
        
        // Testing Settings
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "python.testing.pytestArgs": [
            "tests"
        ]
    },
    "extensions": {
        "recommendations": [
            // Core ROS Development
            "ms-vscode.ros",
            "ms-vscode.cpptools-extension-pack",
            "ms-vscode.cmake-tools",
            
            // Python AI/ML Development
            "ms-python.python",
            "ms-toolsai.jupyter",
            "ms-python.black-formatter",
            "ms-python.flake8",
            "ms-python.mypy-type-checker",
            "ms-python.pylint",
            
            // Docker & Containerization
            "ms-azuretools.vscode-docker",
            "ms-vscode-remote.remote-containers",
            "ms-vscode-remote.remote-ssh",
            
            // Configuration & Data Files
            "redhat.vscode-yaml",
            "ms-vscode.vscode-json",
            
            // Git & Version Control
            "mhutchie.git-graph",
            "eamodio.gitlens",
            
            // AI/ML Specific Extensions
            "ms-toolsai.vscode-ai",
            "ms-python.vscode-pylance",
            
            // Additional Productivity Tools
            "ms-vscode.hexeditor",
            "streetsidesoftware.code-spell-checker",
            "ms-vscode.test-adapter-converter",
            "hbenl.vscode-test-explorer",
            
            // Robotics Visualization
            "ms-vscode.live-server",
            
            // Documentation
            "shd101wyy.markdown-preview-enhanced"
        ]
    },
    "tasks": {
        "version": "2.0.0",
        "tasks": [
            {
                "label": "Build All ROS Packages",
                "type": "shell",
                "command": "colcon",
                "args": ["build", "--symlink-install"],
                "group": "build",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": false,
                    "panel": "shared"
                },
                "problemMatcher": ["$gcc"]
            },
            {
                "label": "Source ROS Environment",
                "type": "shell",
                "command": "source",
                "args": ["install/setup.bash"],
                "group": "build"
            },
            {
                "label": "Install Python Dependencies",
                "type": "shell",
                "command": "pip",
                "args": ["install", "-r", "requirements.txt"],
                "group": "build",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": false,
                    "panel": "shared"
                }
            },
            {
                "label": "Run AI Perception Example",
                "type": "shell",
                "command": "python",
                "args": ["examples/ai-perception/main.py"],
                "group": "test",
                "dependsOn": ["Install Python Dependencies"],
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": false,
                    "panel": "shared"
                }
            },
            {
                "label": "Run Basic Drone Example",
                "type": "shell",
                "command": "python",
                "args": ["examples/basic-drone/main.py"],
                "group": "test",
                "dependsOn": ["Install Python Dependencies"]
            },
            {
                "label": "Run VR Control Example",
                "type": "shell",
                "command": "python",
                "args": ["examples/vr-control/main.py"],
                "group": "test",
                "dependsOn": ["Install Python Dependencies"]
            },
            {
                "label": "Train AI Models",
                "type": "shell",
                "command": "python",
                "args": ["training/train_models.py"],
                "group": "test",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": false,
                    "panel": "shared"
                }
            },
            {
                "label": "Run Tests",
                "type": "shell",
                "command": "python",
                "args": ["-m", "pytest", "tests/", "-v"],
                "group": "test",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": false,
                    "panel": "shared"
                }
            },
            {
                "label": "Docker Build All",
                "type": "shell",
                "command": "docker-compose",
                "args": ["build"],
                "group": "build",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": false,
                    "panel": "shared"
                }
            },
            {
                "label": "Docker Up Development",
                "type": "shell",
                "command": "docker-compose",
                "args": ["up", "-d"],
                "group": "test",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": false,
                    "panel": "shared"
                }
            },
            {
                "label": "Format Code (Black)",
                "type": "shell",
                "command": "black",
                "args": ["sdk/", "examples/", "training/", "tests/"],
                "group": "build",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": false,
                    "panel": "shared"
                }
            },
            {
                "label": "Lint Code (Flake8)",
                "type": "shell",
                "command": "flake8",
                "args": ["sdk/", "examples/", "training/", "tests/"],
                "group": "test",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": false,
                    "panel": "shared"
                }
            }
        ]
    },
    "launch": {
        "version": "0.2.0",
        "configurations": [
            {
                "name": "Python: Current File",
                "type": "debugpy",
                "request": "launch",
                "program": "${file}",
                "console": "integratedTerminal",
                "justMyCode": false,
                "env": {
                    "PYTHONPATH": "${workspaceFolder}/sdk:${workspaceFolder}/src"
                }
            },
            {
                "name": "Python: AI Perception Example",
                "type": "debugpy",
                "request": "launch",
                "program": "${workspaceFolder}/examples/ai-perception/main.py",
                "console": "integratedTerminal",
                "cwd": "${workspaceFolder}/examples/ai-perception",
                "env": {
                    "PYTHONPATH": "${workspaceFolder}/sdk:${workspaceFolder}/src"
                }
            },
            {
                "name": "Python: Basic Drone Example",
                "type": "debugpy",
                "request": "launch",
                "program": "${workspaceFolder}/examples/basic-drone/main.py",
                "console": "integratedTerminal",
                "cwd": "${workspaceFolder}/examples/basic-drone",
                "env": {
                    "PYTHONPATH": "${workspaceFolder}/sdk:${workspaceFolder}/src"
                }
            },
            {
                "name": "Python: VR Control Example",
                "type": "debugpy",
                "request": "launch",
                "program": "${workspaceFolder}/examples/vr-control/main.py",
                "console": "integratedTerminal",
                "cwd": "${workspaceFolder}/examples/vr-control",
                "env": {
                    "PYTHONPATH": "${workspaceFolder}/sdk:${workspaceFolder}/src"
                }
            },
            {
                "name": "Python: Train Models",
                "type": "debugpy",
                "request": "launch",
                "program": "${workspaceFolder}/training/train_models.py",
                "console": "integratedTerminal",
                "cwd": "${workspaceFolder}/training",
                "env": {
                    "PYTHONPATH": "${workspaceFolder}/sdk:${workspaceFolder}/src"
                }
            },
            {
                "name": "(gdb) Launch ROS Node",
                "type": "cppdbg",
                "request": "launch",
                "program": "${workspaceFolder}/install/lib/your_package/your_node",
                "args": [],
                "stopAtEntry": false,
                "cwd": "${workspaceFolder}",
                "environment": [
                    {
                        "name": "ROS_DOMAIN_ID",
                        "value": "42"
                    }
                ],
                "externalConsole": false,
                "MIMode": "gdb",
                "setupCommands": [
                    {
                        "description": "Enable pretty-printing for gdb",
                        "text": "-enable-pretty-printing",
                        "ignoreFailures": true
                    }
                ]
            }
        ]
    }
}
