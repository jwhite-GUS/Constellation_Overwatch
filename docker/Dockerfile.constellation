# Multi-stage build for Constellation Overwatch SDK
FROM osrf/ros:humble-desktop-full

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV ROS_DISTRO=humble
ENV ROS_DOMAIN_ID=42
ENV ROS_LOCALHOST_ONLY=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    git \
    vim \
    nano \
    tmux \
    htop \
    tree \
    wget \
    unzip \
    build-essential \
    cmake \
    python3-pip \
    python3-dev \
    python3-colcon-common-extensions \
    python3-rosdep \
    python3-vcstool \
    python3-argcomplete \
    ros-${ROS_DISTRO}-gazebo-ros-pkgs \
    ros-${ROS_DISTRO}-cartographer \
    ros-${ROS_DISTRO}-navigation2 \
    ros-${ROS_DISTRO}-nav2-bringup \
    ros-${ROS_DISTRO}-robot-localization \
    ros-${ROS_DISTRO}-tf2-tools \
    ros-${ROS_DISTRO}-rqt* \
    ros-${ROS_DISTRO}-mavros \
    ros-${ROS_DISTRO}-mavros-extras \
    ros-${ROS_DISTRO}-mavros-msgs \
    && rm -rf /var/lib/apt/lists/*

# Install Python packages for AI and development
RUN pip3 install \
    numpy \
    scipy \
    matplotlib \
    opencv-python \
    pandas \
    jupyter \
    jupyterlab \
    pytest \
    black \
    flake8 \
    mypy \
    torch \
    torchvision \
    tensorflow \
    scikit-learn \
    scikit-image \
    Pillow \
    onnx \
    onnxruntime \
    transformers \
    datasets \
    accelerate \
    gradio \
    fastapi \
    uvicorn \
    pydantic \
    asyncio-mqtt \
    websockets \
    aiohttp \
    cryptography

# Create workspace
WORKDIR /workspace

# Initialize rosdep
RUN rosdep init && rosdep update

# Download GeographicLib datasets for MAVROS
RUN /opt/ros/${ROS_DISTRO}/lib/mavros/install_geographiclib_datasets.sh

# Source ROS 2 setup in bashrc
RUN echo "source /opt/ros/${ROS_DISTRO}/setup.bash" >> ~/.bashrc
RUN echo "source /workspace/install/setup.bash" >> ~/.bashrc
RUN echo "export ROS_DOMAIN_ID=${ROS_DOMAIN_ID}" >> ~/.bashrc
RUN echo "export ROS_LOCALHOST_ONLY=${ROS_LOCALHOST_ONLY}" >> ~/.bashrc
RUN echo "export PYTHONPATH=/workspace/sdk:/workspace:\$PYTHONPATH" >> ~/.bashrc

# Create build and install directories
RUN mkdir -p /workspace/sdk /workspace/examples /workspace/config /workspace/models /workspace/build /workspace/install /workspace/log

# Set up colcon auto-completion
RUN echo "source /usr/share/colcon_argcomplete/hook/colcon-argcomplete.bash" >> ~/.bashrc

# Create a non-root user for development
RUN useradd -m -s /bin/bash -G sudo developer && \
    echo "developer ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Switch to the developer user
USER developer
WORKDIR /workspace

# Source ROS 2 setup in developer's bashrc
RUN echo "source /opt/ros/${ROS_DISTRO}/setup.bash" >> ~/.bashrc
RUN echo "source /workspace/install/setup.bash" >> ~/.bashrc
RUN echo "export ROS_DOMAIN_ID=${ROS_DOMAIN_ID}" >> ~/.bashrc
RUN echo "export ROS_LOCALHOST_ONLY=${ROS_LOCALHOST_ONLY}" >> ~/.bashrc
RUN echo "export PYTHONPATH=/workspace/sdk:/workspace:\$PYTHONPATH" >> ~/.bashrc

# Set up Jupyter
RUN mkdir -p ~/.jupyter
RUN echo "c.ServerApp.ip = '0.0.0.0'" >> ~/.jupyter/jupyter_lab_config.py
RUN echo "c.ServerApp.port = 8888" >> ~/.jupyter/jupyter_lab_config.py
RUN echo "c.ServerApp.open_browser = False" >> ~/.jupyter/jupyter_lab_config.py
RUN echo "c.ServerApp.allow_root = True" >> ~/.jupyter/jupyter_lab_config.py

CMD ["/bin/bash"]
